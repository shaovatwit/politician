--
-- PostgreSQL database dump
--

-- Dumped from database version 14.7 (Homebrew)
-- Dumped by pg_dump version 14.7 (Homebrew)

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: auth_group; Type: TABLE; Schema: public; Owner: vianne
--

CREATE TABLE public.auth_group (
    id integer NOT NULL,
    name character varying(150) NOT NULL
);


ALTER TABLE public.auth_group OWNER TO vianne;

--
-- Name: auth_group_id_seq; Type: SEQUENCE; Schema: public; Owner: vianne
--

ALTER TABLE public.auth_group ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_group_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_group_permissions; Type: TABLE; Schema: public; Owner: vianne
--

CREATE TABLE public.auth_group_permissions (
    id bigint NOT NULL,
    group_id integer NOT NULL,
    permission_id integer NOT NULL
);


ALTER TABLE public.auth_group_permissions OWNER TO vianne;

--
-- Name: auth_group_permissions_id_seq; Type: SEQUENCE; Schema: public; Owner: vianne
--

ALTER TABLE public.auth_group_permissions ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_group_permissions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_permission; Type: TABLE; Schema: public; Owner: vianne
--

CREATE TABLE public.auth_permission (
    id integer NOT NULL,
    name character varying(255) NOT NULL,
    content_type_id integer NOT NULL,
    codename character varying(100) NOT NULL
);


ALTER TABLE public.auth_permission OWNER TO vianne;

--
-- Name: auth_permission_id_seq; Type: SEQUENCE; Schema: public; Owner: vianne
--

ALTER TABLE public.auth_permission ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_permission_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_user; Type: TABLE; Schema: public; Owner: vianne
--

CREATE TABLE public.auth_user (
    id integer NOT NULL,
    password character varying(128) NOT NULL,
    last_login timestamp with time zone,
    is_superuser boolean NOT NULL,
    username character varying(150) NOT NULL,
    first_name character varying(150) NOT NULL,
    last_name character varying(150) NOT NULL,
    email character varying(254) NOT NULL,
    is_staff boolean NOT NULL,
    is_active boolean NOT NULL,
    date_joined timestamp with time zone NOT NULL
);


ALTER TABLE public.auth_user OWNER TO vianne;

--
-- Name: auth_user_groups; Type: TABLE; Schema: public; Owner: vianne
--

CREATE TABLE public.auth_user_groups (
    id bigint NOT NULL,
    user_id integer NOT NULL,
    group_id integer NOT NULL
);


ALTER TABLE public.auth_user_groups OWNER TO vianne;

--
-- Name: auth_user_groups_id_seq; Type: SEQUENCE; Schema: public; Owner: vianne
--

ALTER TABLE public.auth_user_groups ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_user_groups_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_user_id_seq; Type: SEQUENCE; Schema: public; Owner: vianne
--

ALTER TABLE public.auth_user ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_user_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_user_user_permissions; Type: TABLE; Schema: public; Owner: vianne
--

CREATE TABLE public.auth_user_user_permissions (
    id bigint NOT NULL,
    user_id integer NOT NULL,
    permission_id integer NOT NULL
);


ALTER TABLE public.auth_user_user_permissions OWNER TO vianne;

--
-- Name: auth_user_user_permissions_id_seq; Type: SEQUENCE; Schema: public; Owner: vianne
--

ALTER TABLE public.auth_user_user_permissions ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_user_user_permissions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_admin_log; Type: TABLE; Schema: public; Owner: vianne
--

CREATE TABLE public.django_admin_log (
    id integer NOT NULL,
    action_time timestamp with time zone NOT NULL,
    object_id text,
    object_repr character varying(200) NOT NULL,
    action_flag smallint NOT NULL,
    change_message text NOT NULL,
    content_type_id integer,
    user_id integer NOT NULL,
    CONSTRAINT django_admin_log_action_flag_check CHECK ((action_flag >= 0))
);


ALTER TABLE public.django_admin_log OWNER TO vianne;

--
-- Name: django_admin_log_id_seq; Type: SEQUENCE; Schema: public; Owner: vianne
--

ALTER TABLE public.django_admin_log ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.django_admin_log_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_content_type; Type: TABLE; Schema: public; Owner: vianne
--

CREATE TABLE public.django_content_type (
    id integer NOT NULL,
    app_label character varying(100) NOT NULL,
    model character varying(100) NOT NULL
);


ALTER TABLE public.django_content_type OWNER TO vianne;

--
-- Name: django_content_type_id_seq; Type: SEQUENCE; Schema: public; Owner: vianne
--

ALTER TABLE public.django_content_type ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.django_content_type_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_migrations; Type: TABLE; Schema: public; Owner: vianne
--

CREATE TABLE public.django_migrations (
    id bigint NOT NULL,
    app character varying(255) NOT NULL,
    name character varying(255) NOT NULL,
    applied timestamp with time zone NOT NULL
);


ALTER TABLE public.django_migrations OWNER TO vianne;

--
-- Name: django_migrations_id_seq; Type: SEQUENCE; Schema: public; Owner: vianne
--

ALTER TABLE public.django_migrations ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.django_migrations_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_session; Type: TABLE; Schema: public; Owner: vianne
--

CREATE TABLE public.django_session (
    session_key character varying(40) NOT NULL,
    session_data text NOT NULL,
    expire_date timestamp with time zone NOT NULL
);


ALTER TABLE public.django_session OWNER TO vianne;

--
-- Name: politicians_city; Type: TABLE; Schema: public; Owner: vianne
--

CREATE TABLE public.politicians_city (
    city_id integer NOT NULL,
    name character varying(100),
    state character varying(25),
    politician_id integer NOT NULL
);


ALTER TABLE public.politicians_city OWNER TO vianne;

--
-- Name: politicians_city_city_id_seq; Type: SEQUENCE; Schema: public; Owner: vianne
--

ALTER TABLE public.politicians_city ALTER COLUMN city_id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.politicians_city_city_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: politicians_department; Type: TABLE; Schema: public; Owner: vianne
--

CREATE TABLE public.politicians_department (
    department_id integer NOT NULL,
    name character varying(100),
    url character varying(1000),
    city_id integer NOT NULL,
    phone character varying(13)
);


ALTER TABLE public.politicians_department OWNER TO vianne;

--
-- Name: politicians_department_department_id_seq; Type: SEQUENCE; Schema: public; Owner: vianne
--

ALTER TABLE public.politicians_department ALTER COLUMN department_id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.politicians_department_department_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: politicians_office; Type: TABLE; Schema: public; Owner: vianne
--

CREATE TABLE public.politicians_office (
    office_id integer NOT NULL,
    name character varying(100),
    role character varying(100),
    politician_id integer NOT NULL
);


ALTER TABLE public.politicians_office OWNER TO vianne;

--
-- Name: politicians_office_office_id_seq; Type: SEQUENCE; Schema: public; Owner: vianne
--

ALTER TABLE public.politicians_office ALTER COLUMN office_id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.politicians_office_office_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: politicians_politician; Type: TABLE; Schema: public; Owner: vianne
--

CREATE TABLE public.politicians_politician (
    politician_id integer NOT NULL,
    name character varying(100) NOT NULL,
    gov_link character varying(1000) NOT NULL,
    campaign_link character varying(1000) NOT NULL,
    email character varying(100),
    phone character varying(15),
    address character varying(1000),
    party character varying(25),
    date_elected character varying(4),
    biography character varying(10000),
    district character varying(100)
);


ALTER TABLE public.politicians_politician OWNER TO vianne;

--
-- Name: politicians_politician_politician_id_seq; Type: SEQUENCE; Schema: public; Owner: vianne
--

ALTER TABLE public.politicians_politician ALTER COLUMN politician_id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.politicians_politician_politician_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Data for Name: auth_group; Type: TABLE DATA; Schema: public; Owner: vianne
--

COPY public.auth_group (id, name) FROM stdin;
\.


--
-- Data for Name: auth_group_permissions; Type: TABLE DATA; Schema: public; Owner: vianne
--

COPY public.auth_group_permissions (id, group_id, permission_id) FROM stdin;
\.


--
-- Data for Name: auth_permission; Type: TABLE DATA; Schema: public; Owner: vianne
--

COPY public.auth_permission (id, name, content_type_id, codename) FROM stdin;
1	Can add log entry	1	add_logentry
2	Can change log entry	1	change_logentry
3	Can delete log entry	1	delete_logentry
4	Can view log entry	1	view_logentry
5	Can add permission	2	add_permission
6	Can change permission	2	change_permission
7	Can delete permission	2	delete_permission
8	Can view permission	2	view_permission
9	Can add group	3	add_group
10	Can change group	3	change_group
11	Can delete group	3	delete_group
12	Can view group	3	view_group
13	Can add user	4	add_user
14	Can change user	4	change_user
15	Can delete user	4	delete_user
16	Can view user	4	view_user
17	Can add content type	5	add_contenttype
18	Can change content type	5	change_contenttype
19	Can delete content type	5	delete_contenttype
20	Can view content type	5	view_contenttype
21	Can add session	6	add_session
22	Can change session	6	change_session
23	Can delete session	6	delete_session
24	Can view session	6	view_session
25	Can add city	7	add_city
26	Can change city	7	change_city
27	Can delete city	7	delete_city
28	Can view city	7	view_city
29	Can add politician	8	add_politician
30	Can change politician	8	change_politician
31	Can delete politician	8	delete_politician
32	Can view politician	8	view_politician
33	Can add office	9	add_office
34	Can change office	9	change_office
35	Can delete office	9	delete_office
36	Can view office	9	view_office
37	Can add department	10	add_department
38	Can change department	10	change_department
39	Can delete department	10	delete_department
40	Can view department	10	view_department
\.


--
-- Data for Name: auth_user; Type: TABLE DATA; Schema: public; Owner: vianne
--

COPY public.auth_user (id, password, last_login, is_superuser, username, first_name, last_name, email, is_staff, is_active, date_joined) FROM stdin;
1	pbkdf2_sha256$390000$lvoa12GC6JjFX4p8URibnD$B3wsLpw3jEVsoOOD8TLu4k95IKq7awQT0/+CogGUvEM=	2023-03-20 03:35:17.548955+01	t	vianne				t	t	2023-03-20 03:35:10.756953+01
\.


--
-- Data for Name: auth_user_groups; Type: TABLE DATA; Schema: public; Owner: vianne
--

COPY public.auth_user_groups (id, user_id, group_id) FROM stdin;
\.


--
-- Data for Name: auth_user_user_permissions; Type: TABLE DATA; Schema: public; Owner: vianne
--

COPY public.auth_user_user_permissions (id, user_id, permission_id) FROM stdin;
\.


--
-- Data for Name: django_admin_log; Type: TABLE DATA; Schema: public; Owner: vianne
--

COPY public.django_admin_log (id, action_time, object_id, object_repr, action_flag, change_message, content_type_id, user_id) FROM stdin;
\.


--
-- Data for Name: django_content_type; Type: TABLE DATA; Schema: public; Owner: vianne
--

COPY public.django_content_type (id, app_label, model) FROM stdin;
1	admin	logentry
2	auth	permission
3	auth	group
4	auth	user
5	contenttypes	contenttype
6	sessions	session
7	politicians	city
8	politicians	politician
9	politicians	office
10	politicians	department
\.


--
-- Data for Name: django_migrations; Type: TABLE DATA; Schema: public; Owner: vianne
--

COPY public.django_migrations (id, app, name, applied) FROM stdin;
1	contenttypes	0001_initial	2023-03-18 20:17:02.122761+01
2	auth	0001_initial	2023-03-18 20:17:02.169256+01
3	admin	0001_initial	2023-03-18 20:17:02.183011+01
4	admin	0002_logentry_remove_auto_add	2023-03-18 20:17:02.188159+01
5	admin	0003_logentry_add_action_flag_choices	2023-03-18 20:17:02.195356+01
6	contenttypes	0002_remove_content_type_name	2023-03-18 20:17:02.204971+01
7	auth	0002_alter_permission_name_max_length	2023-03-18 20:17:02.209255+01
8	auth	0003_alter_user_email_max_length	2023-03-18 20:17:02.213142+01
9	auth	0004_alter_user_username_opts	2023-03-18 20:17:02.217471+01
10	auth	0005_alter_user_last_login_null	2023-03-18 20:17:02.22155+01
11	auth	0006_require_contenttypes_0002	2023-03-18 20:17:02.222736+01
12	auth	0007_alter_validators_add_error_messages	2023-03-18 20:17:02.226491+01
13	auth	0008_alter_user_username_max_length	2023-03-18 20:17:02.234057+01
14	auth	0009_alter_user_last_name_max_length	2023-03-18 20:17:02.238293+01
15	auth	0010_alter_group_name_max_length	2023-03-18 20:17:02.244324+01
16	auth	0011_update_proxy_permissions	2023-03-18 20:17:02.247817+01
17	auth	0012_alter_user_first_name_max_length	2023-03-18 20:17:02.251032+01
18	politicians	0001_initial	2023-03-18 20:17:02.271881+01
19	sessions	0001_initial	2023-03-18 20:17:02.278818+01
20	politicians	0002_alter_politician_campaign_link_and_more	2023-03-18 20:26:27.45674+01
21	politicians	0003_alter_politician_address_and_more	2023-03-20 02:22:20.339629+01
22	politicians	0004_department_phone_alter_city_name_alter_city_state_and_more	2023-03-20 18:47:52.940143+01
\.


--
-- Data for Name: django_session; Type: TABLE DATA; Schema: public; Owner: vianne
--

COPY public.django_session (session_key, session_data, expire_date) FROM stdin;
yksirler8b4pic0ybc51w93x6iv16tkm	.eJxVjDkOwjAQRe_iGlleZrxQ0nMGa7zhAHKkOKkQd4dIKaD9773_YoG2tYVtlCVMmZ2ZZKffLVJ6lL6DfKd-m3ma-7pMke8KP-jg1zmX5-Vw_w4ajfatBQmrCBG8l5KAMgpXHOmkrJcYBUhTo6ogNIiqUXttjPMWS0yWoCb2_gCy7zba:1pe5Mj:AstfFj1cQVJmqpMH9yIEk_VGeRmB1WbpJeVKMeYTEjU	2023-04-03 04:35:17.551688+02
\.


--
-- Data for Name: politicians_city; Type: TABLE DATA; Schema: public; Owner: vianne
--

COPY public.politicians_city (city_id, name, state, politician_id) FROM stdin;
1	boston	ma	1
\.


--
-- Data for Name: politicians_department; Type: TABLE DATA; Schema: public; Owner: vianne
--

COPY public.politicians_department (department_id, name, url, city_id, phone) FROM stdin;
3	Age Strong Commission	https://www.boston.gov/departments/age-strong-commission	1	617-635-4366
4	Analytics Team	https://www.boston.gov/departments/analytics-team	1	617-635-4783
5	Animal Care and Control	https://www.boston.gov/departments/animal-care-and-control	1	617-635-5348
6	Archaeology	https://www.boston.gov/departments/archaeology	1	617-635-3097
7	Archives and Records Management	https://www.boston.gov/departments/archives-and-records-management	1	617-635-1195
8	Arts and Culture	https://www.boston.gov/departments/arts-and-culture	1	617-635-4445
9	Assessing	https://www.boston.gov/departments/assessing	1	617-635-4287
10	Auditing	https://www.boston.gov/departments/auditing	1	617-635-4660
11	Black Male Advancement	https://www.boston.gov/departments/black-male-advancement	1	617-635-1037
12	Boston 311	https://www.boston.gov/departments/boston-311	1	311
13	Boston Bikes	https://www.boston.gov/departments/boston-bikes	1	617-635-4680
14	Boston Centers for Youth & Families	https://www.boston.gov/departments/boston-centers-youth-families	1	617-635-4920
15	Boston Human Rights Commission	https://www.boston.gov/departments/boston-human-rights-commission	1	617-635-2328
16	Boston Public Health Commission	https://www.boston.gov/government/cabinets/boston-public-health-commission	1	617-534-5395
17	Broadband and Cable	https://www.boston.gov/departments/broadband-and-cable	1	617-635-3112
18	Budget	https://www.boston.gov/departments/budget	1	617-635-3870
19	Center for Working Families	https://www.boston.gov/departments/center-working-families	1	617-918-5300
20	City Clerk	https://www.boston.gov/departments/city-clerk	1	617-635-4601
21	City Council	https://www.boston.gov/departments/city-council	1	617-635-3040
22	Civic Organizing	https://www.boston.gov/departments/civic-organizing	1	617-635-3485
23	Community Engagement	https://www.boston.gov/government/cabinets/community-engagement	1	617-635-3485
24	Consumer Affairs	https://www.boston.gov/departments/consumer-affairs	1	617-635-3834
25	Cybersecurity Team	https://www.boston.gov/departments/cybersecurity-team	1	617-635-4783
26	Digital Services Team	https://www.boston.gov/departments/digital-services-team	1	617-635-4500
27	Disabilities Commission	https://www.boston.gov/departments/disabilities-commission	1	617-635-3682
28	Diversity	https://www.boston.gov/departments/diversity	1	617-635-2011
29	Early Childhood	https://www.boston.gov/departments/early-childhood	1	617-635-2850
30	Economic Opportunity and Inclusion	https://www.boston.gov/government/cabinets/economic-opportunity-and-inclusion	1	617-635-5729
31	Election	https://www.boston.gov/departments/election	1	617-635-8683
32	Emergency Management	https://www.boston.gov/departments/emergency-management	1	617-343-2400
33	Emergency Medical Services	https://www.boston.gov/departments/emergency-medical-services	1	617-343-2367 
34	Entertainment Licensing	https://www.boston.gov/departments/entertainment-licensing	1	617-635-4165
35	Environment	https://www.boston.gov/departments/environment	1	617-635-3850
36	Equity and Inclusion Cabinet	https://www.boston.gov/government/cabinets/equity-and-inclusion-cabinet	1	617-635-5714
37	Fair Housing and Equity	https://www.boston.gov/departments/fair-housing-and-equity	1	617-635-2500
38	Fire Operations	https://www.boston.gov/departments/fire-operations	1	617-343-3550
39	Fire Prevention	https://www.boston.gov/departments/fire-prevention	1	617-343-3628
40	Food Justice	https://www.boston.gov/departments/food-justice	1	617-635-3717
41	GrowBoston	https://www.boston.gov/departments/growboston	1	617-635-3880
42	Historic Preservation	https://www.boston.gov/departments/historic-preservation	1	617-635-1935
43	Housing	https://www.boston.gov/departments/housing	1	617-635-3880
44	Housing Authority	https://www.boston.gov/departments/housing-authority	1	617-988-4000
45	Human Resources	https://www.boston.gov/departments/human-resources	1	617-635-3370
46	Human Services	https://www.boston.gov/government/cabinets/human-services	1	617-635-1845
47	Immigrant Advancement	https://www.boston.gov/departments/immigrant-advancement	1	617-635-2980
48	Innovation and Technology	https://www.boston.gov/departments/innovation-and-technology	1	617-635-4783
49	Inspectional Services	https://www.boston.gov/departments/inspectional-services	1	617-635-5300
50	Intergovernmental Relations	https://www.boston.gov/departments/intergovernmental-relations	1	617-635-3817
51	Labor Compliance and Worker Protection	https://www.boston.gov/departments/labor-compliance-and-worker-protection	1	617-918-5499
52	Labor Relations	https://www.boston.gov/departments/labor-relations	1	617-635-4525
53	Landmarks Commission	https://www.boston.gov/departments/landmarks-commission	1	617-635-1935
54	Language and Communications Access	https://www.boston.gov/departments/language-and-communications-access	1	617-635-3414
55	Law	https://www.boston.gov/departments/law	1	617-635-4034
56	LGBTQ+ Advancement	https://www.boston.gov/departments/lgbtq-advancement	1	617-635-5714
57	Library	https://www.boston.gov/departments/library	1	617-536-5400
58	Licensing Board	https://www.boston.gov/departments/licensing-board	1	617-635-4170
59	Mayor's Office	https://www.boston.gov/departments/mayors-office	1	617-635-4500
60	Neighborhood Services	https://www.boston.gov/departments/neighborhood-services	1	617-635-3485
61	New Urban Mechanics	https://www.boston.gov/departments/new-urban-mechanics	1	617-635-0044
62	Operations Cabinet	https://www.boston.gov/government/cabinets/operations-cabinet	1	617-635-0942
63	Parking Clerk	https://www.boston.gov/departments/parking-clerk	1	 617-635-4410
64	Parks and Recreation	https://www.boston.gov/departments/parks-and-recreation	1	617-635-4505
65	Planning & Development Agency	https://www.boston.gov/departments/planning-development-agency	1	617-722-4300
66	Police	https://www.boston.gov/departments/police	1	617-343-4500
67	Police Accountability and Transparency	https://www.boston.gov/departments/police-accountability-and-transparency	1	617-635-4224
68	Press Office	https://www.boston.gov/departments/press-office	1	617-635-4461
69	Procurement	https://www.boston.gov/departments/procurement	1	617-635-4564
70	Property Management	https://www.boston.gov/departments/property-management	1	617-635-4100
71	Public Facilities	https://www.boston.gov/departments/public-facilities	1	617-635-0412
72	Public Records	https://www.boston.gov/departments/public-records	1	617-635-4037
73	Public Safety	https://www.boston.gov/departments/public-safety	1	617-635-3722
74	Public Works	https://www.boston.gov/departments/public-works	1	617-635-4900
75	Registry: Birth, death, and marriage	https://www.boston.gov/departments/registry-birth-death-and-marriage	1	617-635-4175
76	Resilience and Racial Equity	https://www.boston.gov/departments/resilience-and-racial-equity	1	617-635-0029
77	Retirement	https://www.boston.gov/departments/retirement	1	617-635-4311
78	Returning Citizens	https://www.boston.gov/departments/returning-citizens	1	617-635-5333
79	Schools	https://www.boston.gov/departments/schools	1	617-635-9000
80	Small Business Development	https://www.boston.gov/departments/small-business-development	1	617-635-0355
81	Supplier and Workforce Diversity	https://www.boston.gov/departments/supplier-and-workforce-diversity	1	617-635-4511
82	Tax Collection	https://www.boston.gov/departments/tax-collection	1	617-635-4131
83	Tourism, Sports, and Entertainment	https://www.boston.gov/departments/tourism-sports-and-entertainment	1	617-635-3911
84	Transportation	https://www.boston.gov/departments/transportation	1	617-635-4680
85	Treasury	https://www.boston.gov/departments/treasury	1	617-635-4140
86	Veterans Services	https://www.boston.gov/departments/veterans-services	1	617-635-3026
87	Water and Sewer Commission	https://www.boston.gov/departments/water-and-sewer-commission	1	617-989-7000
88	Women’s Advancement	https://www.boston.gov/departments/womens-advancement	1	617-635-3138
89	Worker Empowerment	https://www.boston.gov/government/cabinets/worker-empowerment	1	617-918-5248 
90	Workforce Development	https://www.boston.gov/departments/workforce-development	1	617-918-5248
91	Youth Employment and Opportunity	https://www.boston.gov/departments/youth-employment-and-opportunity	1	617-635-4202
92	Youth Engagement and Advancement	https://www.boston.gov/departments/youth-engagement-and-advancement	1	617-635-1845
\.


--
-- Data for Name: politicians_office; Type: TABLE DATA; Schema: public; Owner: vianne
--

COPY public.politicians_office (office_id, name, role, politician_id) FROM stdin;
\.


--
-- Data for Name: politicians_politician; Type: TABLE DATA; Schema: public; Owner: vianne
--

COPY public.politicians_politician (politician_id, name, gov_link, campaign_link, email, phone, address, party, date_elected, biography, district) FROM stdin;
3	\n        Ruthzee Louijeune\n   	https://www.boston.gov/departments/city-council/ruthzee-louijeune		\N	\N	\N	\N	\N	\N	\N
4	\n        Julia Mejia\n      	https://www.boston.gov/departments/city-council/julia-mejia		\N	\N	\N	\N	\N	\N	\N
5	\n        Erin Murphy\n      	https://www.boston.gov/departments/city-council/erin-murphy		\N	\N	\N	\N	\N	\N	\N
6	\n        Gabriela Coletta\n    	https://www.boston.gov/departments/city-council/gabriela-coletta		\N	\N	\N	\N	\N	\N	\N
7	\n        Frank Baker\n      	https://www.boston.gov/departments/city-council/frank-baker		\N	\N	\N	\N	\N	\N	\N
8	\n        Brian Worrell\n      	https://www.boston.gov/departments/city-council/brian-worrell		\N	\N	\N	\N	\N	\N	\N
9	\n        Ricardo Arroyo\n      	https://www.boston.gov/departments/city-council/ricardo-arroyo		\N	\N	\N	\N	\N	\N	\N
10	\n        Kendra Lara\n      	https://www.boston.gov/departments/city-council/kendra-lara		\N	\N	\N	\N	\N	\N	\N
11	\n        Michael Flaherty\n    	https://www.boston.gov/departments/city-council/michael-flaherty		\N	\N	\N	\N	\N	\N	\N
12	\n        Ruthzee Louijeune\n   	https://www.boston.gov/departments/city-council/ruthzee-louijeune		\N	\N	\N	\N	\N	\N	\N
13	\n        Gabriela Coletta\n    	https://www.boston.gov/departments/city-council/gabriela-coletta		\N	\N	\N	\N	\N	\N	\N
14	\n        Michael Flaherty\n    	https://www.boston.gov/departments/city-council/michael-flaherty		\N	\N	\N	\N	\N	\N	\N
15	\n        Ruthzee Louijeune\n   	https://www.boston.gov/departments/city-council/ruthzee-louijeune		\N	\N	\N	\N	\N	\N	\N
16	\n        Gabriela Coletta\n    	https://www.boston.gov/departments/city-council/gabriela-coletta		\N	\N	\N	\N	\N	\N	\N
17	\n        Michael Flaherty\n    	https://www.boston.gov/departments/city-council/michael-flaherty		\N	\N	\N	\N	\N	\N	\N
18	\n        Ruthzee Louijeune\n   	https://www.boston.gov/departments/city-council/ruthzee-louijeune		\N	\N	\N	\N	\N	\N	\N
19	\n        Gabriela Coletta\n    	https://www.boston.gov/departments/city-council/gabriela-coletta		\N	\N	\N	\N	\N	\N	\N
20	\n        Michael Flaherty\n      	https://www.boston.gov/departments/city-council/michael-flaherty		\N	\N	\N	\N	\N	\N	\N
21	\n        Ruthzee Louijeune\n      	https://www.boston.gov/departments/city-council/ruthzee-louijeune		\N	\N	\N	\N	\N	\N	\N
22	\n        Gabriela Coletta\n      	https://www.boston.gov/departments/city-council/gabriela-coletta		\N	\N	\N	\N	\N	\N	\N
23	\n        Tania Fernandes Anderson\n      	https://www.boston.gov/departments/city-council/tania-fernandes-anderson		\N	\N	\N	\N	\N	\N	\N
24	\n        Kenzie Bok\n      	https://www.boston.gov/departments/city-council/kenzie-bok		\N	\N	\N	\N	\N	\N	\N
2	\n        Michael Flaherty\n    	https://www.boston.gov/departments/city-council/michael-flaherty		Michael.F.Flaherty@boston.gov	617-635-4205	\n                1 City Hall Square, Suite 550\n                                  \n Boston MA\n 02201-2043\n 	Democratic (D)	2013	\nBorn and raised in Boston, Michael developed a passion for public service watching his father serve as a Massachusetts State Representative. He admired how his father built a career on helping people - leading the fight against drug addiction by assisting families with proper treatment and recovery services, helping with housing placement, and putting people back to work. Michael watched his father’s passion for public service and prioritized those same values as he began a career in public service himself.  After graduating from BC High, Michael worked his way through Boston College and Boston University School of Law as a Local 25 Teamster. Following law school, Michael worked as an Assistant District Attorney in Suffolk County.  \nIn 1999, Michael ran for the Boston City Council because he wanted to get more involved in helping his fellow Bostonians. He served from 2000-2008 and spent five years as Council President. During this time, Michael was a new voice on the Council, bringing progressive ideas and goals to what was then an aging political body. \nIn 2001, long before the Goodridge Decision by the Massachusetts Supreme Judicial Court, he was the first citywide elected official to publicly support marriage equality. At the time this was a radical and unpopular position in the city, but one Michael stood firmly behind. During the same year, Michael was an early supporter of the Community Preservation Act because he has always believed in protecting affordable housing and safeguarding Boston’s greenspace for future generations. \nIn 2009, Michael decided to challenge Mayor Menino, who had been in office for 16 years. Michael wanted to bring the same fresh viewpoint that he had brought to the Council to the Mayor’s office. Unfortunately, this challenge was unsuccessful, so Michael focused on the practice of law. \nWith Boston rapidly changing as the city began to boom, Michael decided it was time to come back to the City Council. He had seen both the benefits and the costs of the city’s growth. While many were prospering, others were being forced out of their homes--in some cases, homes that had been in their family for generations.\nMichael was re-elected in 2013 as an At-Large Boston City Councilor and has been hard at work ever since, fighting to improve the quality of life for all Bostonians. The makeup of the Council has changed significantly since Michael was first elected, and he now has many other progressive voices on his side working to move Boston forward. \nIn the last six years, Michael has many accomplishments on the Council. In 2016, Boston finally adopted the Community Preservation Act, a culmination of years of Michael’s advocacy and leadership on the issue. Michael now chairs the Community Preservation Committee, which oversees the authorization of recommended community preservation funding requests. In this role, he recommended passage of funding for 91 community preservation projects which total an approximate $42 million over the past year and a half.\nMichael also has served as the Chair of the Committee on Government Operations, on which he has ushered many pieces of important legislation through to passage. These include a number of ordinances aimed at supporting housing affordability, including changes to the Inclusionary Development Policy and zoning code. Michael was the first Councilor to call for updates to the Linkage formula, which ensures that the boom of development in Boston creates affordable housing for those in need. Michael also worked with community leaders and other stakeholders to pass regulations on short term rentals, which will help return countless, badly needed units back to the housing market for Boston families to access. \nMichael also worked on legislation to increase voter access to the polls and registration, strengthening government transparency through lobbying regulations, public safety issues like speed limits and gas leak repairs, the energy efficiency of buildings, and healthy school purchasing standards.\nMichael is proud of the work that he and his colleagues have accomplished, and looks forward to continuing to work with them on behalf of the people of Boston.\n	
1	\n        Ed Flynn\n      	https://www.boston.gov/departments/city-council/ed-flynn		ed.flynn@boston.gov	617-635-3203	\n                1 City Hall Square, Suite 550\n                                  \n Boston MA\n 02201-2043\n 	Democratic (D)	2017	\nIn January 2022, Council President Ed Flynn was unanimously elected by his colleagues to serve as Council President. Councilor Flynn is a resident of District 2, where he has been involved as a community activist and youth sports coach. Before taking his seat as a City Councilor, he was a Probation Officer at Suffolk Superior Court.\nIn addition to being a Boston Public Schools parent at Boston Latin School, Councilor Flynn is a member of several neighborhood organizations throughout the city. He served for 24 years in the U.S. Navy and U.S. Navy reserve. He is a Veteran of Operation ENDURING FREEDOM and helped with disaster relief efforts in Haiti. \nCouncilor Flynn also served for five years in the U.S. Department of Labor under President Clinton, where he worked to expand access to affordable health care and increase the federal minimum wage.\nCouncilor Flynn and his wife Kristen are raising their children, Caroline and Stephen, in Boston.\n	2
25	\n        Liz Breadon\n      	https://www.boston.gov/departments/city-council/liz-breadon		liz.breadon@boston.gov	617-635-3113	\N	Democratic (D)	2019	\nCouncilor Liz Breadon immigrated to the United States from Northern Ireland in 1995 and settled in Oak Square, Brighton, where she lives with her spouse Mary McCarthy. \nCouncilor Breadon is a physical therapist by profession. She began her career working in the National Health Service in the UK.  Upon coming to Boston she worked at Boston Medical Center, The Home for Little Wanderers and Perkins School for the Blind.\nLiz has been an activist in Allston-Brighton for more than 20 years working with other community leaders to preserve the Presentation School Building as a community resource, and to save the Faneuil Branch Library from closure.  She served on the Board of the Brighton Allston Historical Society and the Presentation School Foundation.  As Allston Brighton experienced a wave of new development Liz was a vocal advocate for more affordable housing, preservation and restoration of green space, improvements to mass transportation and stronger public schools. As a life long environmentalist the Councilor has worked to find big and small solutions to build a sustainable, diverse, inclusive and resilient urban community. \nCouncilor Breadon brings her experience as an immigrant, a health care professional and a community activist to her work on the City Council. She is a graduate of the University of Ulster, UK, and received a Doctor of Physical Therapy from Simmons College, Boston.\n	District 9
\.


--
-- Name: auth_group_id_seq; Type: SEQUENCE SET; Schema: public; Owner: vianne
--

SELECT pg_catalog.setval('public.auth_group_id_seq', 1, false);


--
-- Name: auth_group_permissions_id_seq; Type: SEQUENCE SET; Schema: public; Owner: vianne
--

SELECT pg_catalog.setval('public.auth_group_permissions_id_seq', 1, false);


--
-- Name: auth_permission_id_seq; Type: SEQUENCE SET; Schema: public; Owner: vianne
--

SELECT pg_catalog.setval('public.auth_permission_id_seq', 40, true);


--
-- Name: auth_user_groups_id_seq; Type: SEQUENCE SET; Schema: public; Owner: vianne
--

SELECT pg_catalog.setval('public.auth_user_groups_id_seq', 1, false);


--
-- Name: auth_user_id_seq; Type: SEQUENCE SET; Schema: public; Owner: vianne
--

SELECT pg_catalog.setval('public.auth_user_id_seq', 1, true);


--
-- Name: auth_user_user_permissions_id_seq; Type: SEQUENCE SET; Schema: public; Owner: vianne
--

SELECT pg_catalog.setval('public.auth_user_user_permissions_id_seq', 1, false);


--
-- Name: django_admin_log_id_seq; Type: SEQUENCE SET; Schema: public; Owner: vianne
--

SELECT pg_catalog.setval('public.django_admin_log_id_seq', 1, false);


--
-- Name: django_content_type_id_seq; Type: SEQUENCE SET; Schema: public; Owner: vianne
--

SELECT pg_catalog.setval('public.django_content_type_id_seq', 10, true);


--
-- Name: django_migrations_id_seq; Type: SEQUENCE SET; Schema: public; Owner: vianne
--

SELECT pg_catalog.setval('public.django_migrations_id_seq', 22, true);


--
-- Name: politicians_city_city_id_seq; Type: SEQUENCE SET; Schema: public; Owner: vianne
--

SELECT pg_catalog.setval('public.politicians_city_city_id_seq', 1, false);


--
-- Name: politicians_department_department_id_seq; Type: SEQUENCE SET; Schema: public; Owner: vianne
--

SELECT pg_catalog.setval('public.politicians_department_department_id_seq', 92, true);


--
-- Name: politicians_office_office_id_seq; Type: SEQUENCE SET; Schema: public; Owner: vianne
--

SELECT pg_catalog.setval('public.politicians_office_office_id_seq', 1, false);


--
-- Name: politicians_politician_politician_id_seq; Type: SEQUENCE SET; Schema: public; Owner: vianne
--

SELECT pg_catalog.setval('public.politicians_politician_politician_id_seq', 26, true);


--
-- Name: auth_group auth_group_name_key; Type: CONSTRAINT; Schema: public; Owner: vianne
--

ALTER TABLE ONLY public.auth_group
    ADD CONSTRAINT auth_group_name_key UNIQUE (name);


--
-- Name: auth_group_permissions auth_group_permissions_group_id_permission_id_0cd325b0_uniq; Type: CONSTRAINT; Schema: public; Owner: vianne
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissions_group_id_permission_id_0cd325b0_uniq UNIQUE (group_id, permission_id);


--
-- Name: auth_group_permissions auth_group_permissions_pkey; Type: CONSTRAINT; Schema: public; Owner: vianne
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissions_pkey PRIMARY KEY (id);


--
-- Name: auth_group auth_group_pkey; Type: CONSTRAINT; Schema: public; Owner: vianne
--

ALTER TABLE ONLY public.auth_group
    ADD CONSTRAINT auth_group_pkey PRIMARY KEY (id);


--
-- Name: auth_permission auth_permission_content_type_id_codename_01ab375a_uniq; Type: CONSTRAINT; Schema: public; Owner: vianne
--

ALTER TABLE ONLY public.auth_permission
    ADD CONSTRAINT auth_permission_content_type_id_codename_01ab375a_uniq UNIQUE (content_type_id, codename);


--
-- Name: auth_permission auth_permission_pkey; Type: CONSTRAINT; Schema: public; Owner: vianne
--

ALTER TABLE ONLY public.auth_permission
    ADD CONSTRAINT auth_permission_pkey PRIMARY KEY (id);


--
-- Name: auth_user_groups auth_user_groups_pkey; Type: CONSTRAINT; Schema: public; Owner: vianne
--

ALTER TABLE ONLY public.auth_user_groups
    ADD CONSTRAINT auth_user_groups_pkey PRIMARY KEY (id);


--
-- Name: auth_user_groups auth_user_groups_user_id_group_id_94350c0c_uniq; Type: CONSTRAINT; Schema: public; Owner: vianne
--

ALTER TABLE ONLY public.auth_user_groups
    ADD CONSTRAINT auth_user_groups_user_id_group_id_94350c0c_uniq UNIQUE (user_id, group_id);


--
-- Name: auth_user auth_user_pkey; Type: CONSTRAINT; Schema: public; Owner: vianne
--

ALTER TABLE ONLY public.auth_user
    ADD CONSTRAINT auth_user_pkey PRIMARY KEY (id);


--
-- Name: auth_user_user_permissions auth_user_user_permissions_pkey; Type: CONSTRAINT; Schema: public; Owner: vianne
--

ALTER TABLE ONLY public.auth_user_user_permissions
    ADD CONSTRAINT auth_user_user_permissions_pkey PRIMARY KEY (id);


--
-- Name: auth_user_user_permissions auth_user_user_permissions_user_id_permission_id_14a6b632_uniq; Type: CONSTRAINT; Schema: public; Owner: vianne
--

ALTER TABLE ONLY public.auth_user_user_permissions
    ADD CONSTRAINT auth_user_user_permissions_user_id_permission_id_14a6b632_uniq UNIQUE (user_id, permission_id);


--
-- Name: auth_user auth_user_username_key; Type: CONSTRAINT; Schema: public; Owner: vianne
--

ALTER TABLE ONLY public.auth_user
    ADD CONSTRAINT auth_user_username_key UNIQUE (username);


--
-- Name: django_admin_log django_admin_log_pkey; Type: CONSTRAINT; Schema: public; Owner: vianne
--

ALTER TABLE ONLY public.django_admin_log
    ADD CONSTRAINT django_admin_log_pkey PRIMARY KEY (id);


--
-- Name: django_content_type django_content_type_app_label_model_76bd3d3b_uniq; Type: CONSTRAINT; Schema: public; Owner: vianne
--

ALTER TABLE ONLY public.django_content_type
    ADD CONSTRAINT django_content_type_app_label_model_76bd3d3b_uniq UNIQUE (app_label, model);


--
-- Name: django_content_type django_content_type_pkey; Type: CONSTRAINT; Schema: public; Owner: vianne
--

ALTER TABLE ONLY public.django_content_type
    ADD CONSTRAINT django_content_type_pkey PRIMARY KEY (id);


--
-- Name: django_migrations django_migrations_pkey; Type: CONSTRAINT; Schema: public; Owner: vianne
--

ALTER TABLE ONLY public.django_migrations
    ADD CONSTRAINT django_migrations_pkey PRIMARY KEY (id);


--
-- Name: django_session django_session_pkey; Type: CONSTRAINT; Schema: public; Owner: vianne
--

ALTER TABLE ONLY public.django_session
    ADD CONSTRAINT django_session_pkey PRIMARY KEY (session_key);


--
-- Name: politicians_city politicians_city_pkey; Type: CONSTRAINT; Schema: public; Owner: vianne
--

ALTER TABLE ONLY public.politicians_city
    ADD CONSTRAINT politicians_city_pkey PRIMARY KEY (city_id);


--
-- Name: politicians_department politicians_department_pkey; Type: CONSTRAINT; Schema: public; Owner: vianne
--

ALTER TABLE ONLY public.politicians_department
    ADD CONSTRAINT politicians_department_pkey PRIMARY KEY (department_id);


--
-- Name: politicians_office politicians_office_pkey; Type: CONSTRAINT; Schema: public; Owner: vianne
--

ALTER TABLE ONLY public.politicians_office
    ADD CONSTRAINT politicians_office_pkey PRIMARY KEY (office_id);


--
-- Name: politicians_politician politicians_politician_pkey; Type: CONSTRAINT; Schema: public; Owner: vianne
--

ALTER TABLE ONLY public.politicians_politician
    ADD CONSTRAINT politicians_politician_pkey PRIMARY KEY (politician_id);


--
-- Name: auth_group_name_a6ea08ec_like; Type: INDEX; Schema: public; Owner: vianne
--

CREATE INDEX auth_group_name_a6ea08ec_like ON public.auth_group USING btree (name varchar_pattern_ops);


--
-- Name: auth_group_permissions_group_id_b120cbf9; Type: INDEX; Schema: public; Owner: vianne
--

CREATE INDEX auth_group_permissions_group_id_b120cbf9 ON public.auth_group_permissions USING btree (group_id);


--
-- Name: auth_group_permissions_permission_id_84c5c92e; Type: INDEX; Schema: public; Owner: vianne
--

CREATE INDEX auth_group_permissions_permission_id_84c5c92e ON public.auth_group_permissions USING btree (permission_id);


--
-- Name: auth_permission_content_type_id_2f476e4b; Type: INDEX; Schema: public; Owner: vianne
--

CREATE INDEX auth_permission_content_type_id_2f476e4b ON public.auth_permission USING btree (content_type_id);


--
-- Name: auth_user_groups_group_id_97559544; Type: INDEX; Schema: public; Owner: vianne
--

CREATE INDEX auth_user_groups_group_id_97559544 ON public.auth_user_groups USING btree (group_id);


--
-- Name: auth_user_groups_user_id_6a12ed8b; Type: INDEX; Schema: public; Owner: vianne
--

CREATE INDEX auth_user_groups_user_id_6a12ed8b ON public.auth_user_groups USING btree (user_id);


--
-- Name: auth_user_user_permissions_permission_id_1fbb5f2c; Type: INDEX; Schema: public; Owner: vianne
--

CREATE INDEX auth_user_user_permissions_permission_id_1fbb5f2c ON public.auth_user_user_permissions USING btree (permission_id);


--
-- Name: auth_user_user_permissions_user_id_a95ead1b; Type: INDEX; Schema: public; Owner: vianne
--

CREATE INDEX auth_user_user_permissions_user_id_a95ead1b ON public.auth_user_user_permissions USING btree (user_id);


--
-- Name: auth_user_username_6821ab7c_like; Type: INDEX; Schema: public; Owner: vianne
--

CREATE INDEX auth_user_username_6821ab7c_like ON public.auth_user USING btree (username varchar_pattern_ops);


--
-- Name: django_admin_log_content_type_id_c4bce8eb; Type: INDEX; Schema: public; Owner: vianne
--

CREATE INDEX django_admin_log_content_type_id_c4bce8eb ON public.django_admin_log USING btree (content_type_id);


--
-- Name: django_admin_log_user_id_c564eba6; Type: INDEX; Schema: public; Owner: vianne
--

CREATE INDEX django_admin_log_user_id_c564eba6 ON public.django_admin_log USING btree (user_id);


--
-- Name: django_session_expire_date_a5c62663; Type: INDEX; Schema: public; Owner: vianne
--

CREATE INDEX django_session_expire_date_a5c62663 ON public.django_session USING btree (expire_date);


--
-- Name: django_session_session_key_c0390e0f_like; Type: INDEX; Schema: public; Owner: vianne
--

CREATE INDEX django_session_session_key_c0390e0f_like ON public.django_session USING btree (session_key varchar_pattern_ops);


--
-- Name: politicians_city_politician_id_64222218; Type: INDEX; Schema: public; Owner: vianne
--

CREATE INDEX politicians_city_politician_id_64222218 ON public.politicians_city USING btree (politician_id);


--
-- Name: politicians_department_city_id_930cc39b; Type: INDEX; Schema: public; Owner: vianne
--

CREATE INDEX politicians_department_city_id_930cc39b ON public.politicians_department USING btree (city_id);


--
-- Name: politicians_office_politician_id_b295eb31; Type: INDEX; Schema: public; Owner: vianne
--

CREATE INDEX politicians_office_politician_id_b295eb31 ON public.politicians_office USING btree (politician_id);


--
-- Name: auth_group_permissions auth_group_permissio_permission_id_84c5c92e_fk_auth_perm; Type: FK CONSTRAINT; Schema: public; Owner: vianne
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissio_permission_id_84c5c92e_fk_auth_perm FOREIGN KEY (permission_id) REFERENCES public.auth_permission(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_group_permissions auth_group_permissions_group_id_b120cbf9_fk_auth_group_id; Type: FK CONSTRAINT; Schema: public; Owner: vianne
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissions_group_id_b120cbf9_fk_auth_group_id FOREIGN KEY (group_id) REFERENCES public.auth_group(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_permission auth_permission_content_type_id_2f476e4b_fk_django_co; Type: FK CONSTRAINT; Schema: public; Owner: vianne
--

ALTER TABLE ONLY public.auth_permission
    ADD CONSTRAINT auth_permission_content_type_id_2f476e4b_fk_django_co FOREIGN KEY (content_type_id) REFERENCES public.django_content_type(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_user_groups auth_user_groups_group_id_97559544_fk_auth_group_id; Type: FK CONSTRAINT; Schema: public; Owner: vianne
--

ALTER TABLE ONLY public.auth_user_groups
    ADD CONSTRAINT auth_user_groups_group_id_97559544_fk_auth_group_id FOREIGN KEY (group_id) REFERENCES public.auth_group(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_user_groups auth_user_groups_user_id_6a12ed8b_fk_auth_user_id; Type: FK CONSTRAINT; Schema: public; Owner: vianne
--

ALTER TABLE ONLY public.auth_user_groups
    ADD CONSTRAINT auth_user_groups_user_id_6a12ed8b_fk_auth_user_id FOREIGN KEY (user_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_user_user_permissions auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm; Type: FK CONSTRAINT; Schema: public; Owner: vianne
--

ALTER TABLE ONLY public.auth_user_user_permissions
    ADD CONSTRAINT auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm FOREIGN KEY (permission_id) REFERENCES public.auth_permission(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_user_user_permissions auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id; Type: FK CONSTRAINT; Schema: public; Owner: vianne
--

ALTER TABLE ONLY public.auth_user_user_permissions
    ADD CONSTRAINT auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id FOREIGN KEY (user_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: django_admin_log django_admin_log_content_type_id_c4bce8eb_fk_django_co; Type: FK CONSTRAINT; Schema: public; Owner: vianne
--

ALTER TABLE ONLY public.django_admin_log
    ADD CONSTRAINT django_admin_log_content_type_id_c4bce8eb_fk_django_co FOREIGN KEY (content_type_id) REFERENCES public.django_content_type(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: django_admin_log django_admin_log_user_id_c564eba6_fk_auth_user_id; Type: FK CONSTRAINT; Schema: public; Owner: vianne
--

ALTER TABLE ONLY public.django_admin_log
    ADD CONSTRAINT django_admin_log_user_id_c564eba6_fk_auth_user_id FOREIGN KEY (user_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: politicians_city politicians_city_politician_id_64222218_fk_politicia; Type: FK CONSTRAINT; Schema: public; Owner: vianne
--

ALTER TABLE ONLY public.politicians_city
    ADD CONSTRAINT politicians_city_politician_id_64222218_fk_politicia FOREIGN KEY (politician_id) REFERENCES public.politicians_politician(politician_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: politicians_department politicians_departme_city_id_930cc39b_fk_politicia; Type: FK CONSTRAINT; Schema: public; Owner: vianne
--

ALTER TABLE ONLY public.politicians_department
    ADD CONSTRAINT politicians_departme_city_id_930cc39b_fk_politicia FOREIGN KEY (city_id) REFERENCES public.politicians_city(city_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: politicians_office politicians_office_politician_id_b295eb31_fk_politicia; Type: FK CONSTRAINT; Schema: public; Owner: vianne
--

ALTER TABLE ONLY public.politicians_office
    ADD CONSTRAINT politicians_office_politician_id_b295eb31_fk_politicia FOREIGN KEY (politician_id) REFERENCES public.politicians_politician(politician_id) DEFERRABLE INITIALLY DEFERRED;


--
-- PostgreSQL database dump complete
--

